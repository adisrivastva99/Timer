public class NumberToWords {
    public static void main(String[] args) {
        System.out.println(numberToWords(123456789)); 
        System.out.println(numberToWords(999999999)); 
        System.out.println(numberToWords(1000010));
        System.out.println(numberToWords(500));     
    }

    private static final String[] ones = {
            "", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"
    };

    private static final String[] teens = {
            "", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"
    };

    private static final String[] tens = {
            "", "ten", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"
    };

    private static final String[] thousands = {
            "", "thousand", "million"
    };

    public static String numberToWords(int n) {
        if (n == 0) {
            return "zero";
        }

        String result = "";
        int thousandGroup = 0; 
        while (n > 0) {
            int chunk = n % 1000;
            if (chunk > 0) {
                String chunkWord = convertChunk(chunk);
                result = chunkWord + (thousands[thousandGroup].isEmpty() ? "" : " " + thousands[thousandGroup]) + " " + result;
            }
            n /= 1000;
            thousandGroup++;
        }

        return result.trim();
    }

    private static String convertChunk(int number) {
        String result = "";
        int hundred = number / 100;
        int remainder = number % 100;

        if (hundred > 0) {
            result += ones[hundred] + " hundred ";
        }

        if (remainder > 10 && remainder < 20) {
            result += teens[remainder - 10] + " ";
        } else {
            if (remainder >= 10) {
                result += tens[remainder / 10] + " ";
            }
            if (remainder % 10 != 0) {
                result += ones[remainder % 10] + " ";
            }
        }

        return result.trim();
    }
}